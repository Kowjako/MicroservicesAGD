version: '3.4'

services:
  # CATALOG API #
  catalogdb:
    image: mongo:latest

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  # BASKET API #
  basketdb:
    image: redis:alpine
  
  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
  
  # DISCOUNT API #
  discountdb:
    image: postgres

  pgadmin:
    image: dpage/pgadmin4

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  # ORDERING API #
  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile

  # QUEUE (MESSAGE BROKER) -> FROM BASKET TO ORDER DURING CHECKOUT BASKET #
  rabbit-queue:
    image: rabbitmq:3-management-alpine
  
  # API GATEWAY #
  ocelotapigateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    build:
      context: .
      dockerfile: Gateway/OcelotApiGateway/Dockerfile

volumes:
  mongo_data:
  postgres_data:
  pgadmin_data:

